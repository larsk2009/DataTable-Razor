# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  displayName: 'Update project version number from Git'
  inputs:
    runtime: 'core'
    updateAssemblyInfo: true

- task: PowerShell@2
  displayName: 'Make project version number unique'
  inputs:
    targetType: 'inline'
    script: |
      $UtcDateTime = (Get-Date).ToUniversalTime()
      $FormattedDateTime = (Get-Date -Date $UtcDateTime -Format "yyyyMMdd-HHmmss")
      $CI_Version = "$env:GITVERSION_MAJORMINORPATCH-ci-$FormattedDateTime"
      Write-Host ("##vso[task.setvariable variable=CI_Version;]$CI_Version")

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/DataTable.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '**/DataTable.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/DataTable.csproj'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'CI_Version'

- task: DotNetCoreCLI@2
  displayName: 'Publish to internal feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '86128c56-ee9c-40f1-80d9-60e17748d4d4/18803733-ca1a-41da-9007-1784b66eb887'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Nuget Package'
    publishLocation: 'Container'